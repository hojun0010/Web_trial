* { 
    margin: 0;
    padding: 0;
}
html, body{
    position: absolute;
    width: 100%;
    height: 100%;
}
body{
    background-color: antiquewhite;
}
/* 크기 단위 */
/* % : 부모 엘리먼트의 크기를 100%로 하여 이에 따라 영역을 차지한다. 
    -> absolute를 설정하고 %로 하면 vw,vh와 동일한 효과를 얻는가? 그렇다. + vw,vh가 좌우스크롤 영역까지 합해 100%로 계산되는 문제점을 해결가능하다
   vw, vh : 뷰포트를 기준으로 %로 계산되며 이는 웹사이트에서 보여지는 영역을 뜻한다. -> 좌우 스크롤 영역까지 합해서 계산된다*/
header{
    background-color: rgb(195, 134, 134)(130, 78, 78);
    width: 100%;
    height: 15%;
}
aside{
    background-color: rgb(141, 141, 214);
    /*display: inline-block;
    여러개의 inline-block으로 가로배열을 할경우 중간의 여백이 생김 이는 padding, margin이 아닌 
    html 코드 작성 당시 inline-block 요소들 사이에 존재하는 엔터가 text-size크기 만큼 입력됨에 문제이다. 
    <div> ~~~ </div>
    <div> ~~~ </div>   -> 공백 발생 <div>~~~</div><div>~~~</div> -> 공백 발생 안한다.
    해결법 : 가로 배열 하는데 float 속성을 적용 */
    float: inline-start;
    height: 85%;
    width: 15%;
    
}
main{
    background-color: rgb(140, 212, 140);
    float: inline-end;
    height: 85%;
    width: 85%;
    text-align: center; /*가운데 정렬*/
}
#project_body{
    background-color: rgb(205, 181, 227);
    padding: 50px;
}
ol{
    list-style-position: inside;  
    /*inside : 마커 1./2. 같은걸 li 태그 영역 안에서 부터 시작한다 
    기본값은 outside -> li의 실제 내용이 li에의 영역의 시작부터 시작하다 즉 마커는 li의 영역을 벗어난다*/
    text-indent: 15px; /*들여쓰기 속성*/
}
#main_head{
    padding: 15px;
    text-align: center;
    /*안의 요소만큼의 영역을 차지하도록 설정 : inline-block*/
    display: inline-block;
}
.todoList_head_comp{
    margin: 10px;
}
#main_head_middle{
    /*중앙 정렬 -> 각 컴포넌트들은 동일한 크기의 영역을 점유한다.*/
    display: flex;
    justify-content: center;
    align-items: center;
}
.todolist_div > {
    display: inline-block;
}