1.8 HTML5 TAG - IMAGE & MULTIMEDIA

1. 이미지
웹페이지에 이미지를 삽입하는 경우 img tag를 사용한다
attribute - src(이미지 파일 경로), alt(이미지 파일이 없을 경우 표시되는 문장)
width,height(이미지의 너비,높이 - css에서 지정하는 것이 일반적)
ex) <img src="assets/images/doug.jpg" alt="doug" width="100">
    <img src="assets/images/wrongname.gif" alt="이미지가 없습니다.">

2. 미디어
audio 태그는 HTML5에서 새롭게 추가된 태그(IE8 이하에서는 사용불가)
attribute - src(음악 파일 경로), preload(재생 전에 음악 파일을 모두 불러올 것인가), autoplay(음악 파일을 자동 재생 개시할 것인지 지정)
loop(음악을 반복할 것인지 지정), controls(음악 재생 도구를 표시할 것인지 지정, 외관은 브라우저마다 차이가 있다)
ex ) <audio src="assets/audio/Kalimba.mp3" controls></audio>

웹브라우저 별로 지원하는 음악 파일 형식이 다르다. 파일 형식에 따라 재생되지 않는 브라우저가 존재한다는 뜻이다.
source 태그를 사용하여 파일 형식의 차이 문제를 해결할 수 있다. type attribute는 생략 가능하다
ex)  <source src="assets/audio/Kalimba.mp3" type="audio/mpeg">
      <source src="assets/audio/Kalimba.ogg" type="audio/ogg">

2.2 비디오
html5에서 추가된 태그, ie8 이하에서는 사용 불가
src(동영상 파일 경로), poster(동영상 준비 중에 표시될 이미지 파일 경로), preload(재생 전에 동영상 파일을 모두 불러올 것인지 지정)
autoplay(동영상 파일을 자동 재생할 것인가), loop(동영상을 반복할 것인가), controls(동영상 재생 도구를 표시할 것인가), 
audio와 마찬가지로 파일형식의 차이 문제가 발생할 수 있으며 역시 source 태그를 이용하여 문제를 해결하며 type attribute는 생략 가능하다.

ex)  <source src="assets/video/wildlife.mp4" type="video/mp4">
      <source src="assets/video/wildlife.webm" type="video/webm">



1.9 HTML5 TAG - FORMS
form 태그는 사용자가 입력한 데이터를 수집하기 위해 사용되며 input, textarea, button, select, checkbox, radio button, submit button 등의 입력 양식 태그를 포함할 수 있다.

ex) 
<form>
...
form elements (input, checkbox, radio button, submit button...)
...
</form>

get/post는 http 프로토콜을 이용해서 사용자 입력 데이터를 서버에 전달하는 방식을 나타내며 http request method라고 한다.
GET
전송 url에 입력 데이터를 쿼리스트링으로 보내는 방식
예) http://jsonplaceholder.typicode.com/posts?userId=1&id=1
전송 url 바로 뒤에 ?를 통해 데이터의 시작을 알려주고 key-value형태의 데이터를 추가, 1개 이상의 데이터는 &로 구분한다.
url에 전송 데이터가 모두 노출되기 때문에 보안에 문제가 있으며 전송할 수 있는 데이터의 한계가 존재(최대 255자)
REST API에서 GET메소드는 모든 또는 특정 리소스의 조회를 요청한다.
REST API - 웹에서 자원 전송하는데 사용되는 아키텍처의 한 종류?, 여러 규칙이 있으며 이를 지켜야한다.

POST
POST 방식은 request body에 담아 보낸다
예) http://jsonplaceholder.typicode.com/posts
url에 전송 데이터가 모두 노출되지 않지만 속도는 get보다 느리다.
REST API에서 POST메소드는 특정 리소스의 생성을 요청한다.

<!DOCTYPE html>
<html>
  <body>
    <h3>button</h3>
    <input type="button" value="Click me" onclick="alert('Hello world!')">
    <hr>

    <h3>checkbox</h3>
    <input type="checkbox" name="fruit1" value="apple" checked> 사과<br>
    <input type="checkbox" name="fruit2" value="grape"> 포도<br>
    <input type="checkbox" name="fruit3" value="peach"> 복숭아<br>
    <hr>

    <h3>color</h3>
    <input type="color" name="mycolor">
    <hr>

    <h3>date</h3>
    <input type="date" name="birthday">
    <hr>

    <h3>datetime</h3>
    <input type="datetime" name="birthdaytime">
    <hr>

    <h3>datetime-local</h3>
    <input type="datetime-local" name="birthdaytime">
    <hr>

    <h3>email</h3>
    <input type="email" name="useremail">
    <hr>

    <h3>file</h3>
    <input type="file" name="myfile">
    <hr>

    <h3>hidden</h3>
    <input type="hidden" name="country" value="Norway">
    hidden filed는 사용자에 표시되지 않는다.
    <hr>

    <h3>image</h3>
    <input type="image" src="img/img_submit.gif" alt="Submit" width="48" height="48">
    <hr>

    <h3>month</h3>
    <input type="month" name="birthdaymonth">
    <hr>

    <h3>number</h3>
    <input type="number" name="quantity" min="2" max="10" step="2" value="2">
    <hr>

    <h3>password</h3>
    <input type="password" name="pwd">
    <hr>

    <h3>radio</h3>
    <input type="radio" name="gender" value="male" checked> 남자<br>
    <input type="radio" name="gender" value="female"> 여자<br>
    <hr>

    <h3>range</h3>
    <input type="range" name="points" min="0" max="10" step="1" value="5">
    <hr>

    <h3>reset</h3>
    <input type="reset">
    <hr>

    <h3>search</h3>
    <input type="search" name="googlesearch">
    <hr>

    <h3>submit</h3>
    <input type="submit" value="Submit">
    <hr>

    <h3>tel</h3>
    <input type="tel" name="mytel">
    <hr>

    <h3>text</h3>
    <input type="text" name="myname">
    <hr>

    <h3>time</h3>
    <input type="time" name="mytime">
    <hr>

    <h3>url</h3>
    <input type="url" name="myurl">
    <hr>

    <h3>week</h3>
    <input type="week" name="week_year">
  </body>
</html>

3.select - 복수개의 리스트에서 복수개의 아이템을 선택할때 사용
함께 사용되는 태그들 - select(select form 생성), option(option 생성), optgroup(option을 그룹화한다.)

ex)
<!DOCTYPE html>
<html>
  <body>
    <select name="cars1">
      <option value="volvo" selected>Volvo</option>
      <option value="saab" disabled>Saab</option>
      <option value="fiat">Fiat</option>
      <option value="audi">Audi</option>
    </select>

    <select name="cars2" size="4" multiple>
      <option value="volvo">Volvo</option>
      <option value="saab">Saab</option>
      <option value="fiat">Fiat</option>
      <option value="audi" selected>Audi</option>
    </select>

    <select name="cars3">
      <optgroup label="Swedish Cars">
        <option value="volvo">Volvo</option>
        <option value="saab">Saab</option>
      </optgroup>
      <optgroup label="German Cars" disabled>
        <option value="mercedes">Mercedes</option>
        <option value="audi">Audi</option>
      </optgroup>
    </select>
  </body>
</html>

4.textarea - 여러 줄의 글자를 입력할 때 사용한다.
ex)
<!DOCTYPE html>
<html>
  <body>
    <textarea name="message" rows="10" cols="30">Write something here</textarea>
  </body>
</html>

5.button - 버튼 생성, <input type="button">와 유사하지만 input 태그는 빈 태그인 반면 button 태그는 
텍스트나 이미지 같은 콘텐츠를 사용할 수 있다.
type attribute는 반드시 지정하는 것이 바람직하며 attribute 값으로 button, reset, submit을 지정할 수 있다.
ex)
<!DOCTYPE html>
<html>
  <body>
    <button type="button" onclick="alert('Hello World!')">Click Me!</button>

    <input type="button" value="Click Me!" onclick="alert('Hello world!')">
  </body>
</html>

ex)<button type="submit" name="myButton" value="foo">Click me</button>
위 예제의 경우, IE6, IE7에는 ‘foo’ 대신 ‘Click me’를 서버로 전송한다. 
따라서 오래된 IE를 지원해야 한다면 input 태그를 사용하는 것이 바람직하다.

6. fieldset - 관련된 입력 양식들을 그룹화할때 사용
legend - fieldset 태그 내에서 사용되어야 하며 그룹화된 fieldset의 제목을 정의한다.
ex)
<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8">
  </head>
  <body>
      <fieldset>
        <legend>Login</legend>
        Username <input type="text" name="username">
        Password <input type="text" name="password">
      </fieldset>
  </body>
</html>





1.10 HTML5 TAG - STRUCTURE

웹페이지의 레이아웃을 구성하기 위해선 공간을 분할할 필요가 있다.
공간을 분할하는 태그는 div, span, table 등이 있는데 과거에는 table 태그를 사용했지만 현대에는 div를 주로 이용
div 태그는 의미론적으로 어떠한 의미도 가지고 있지 않기 때문에 아래와 같이 Html5에서 새롭게 추가된 시멘틱 태그를 사용하는 것이 좋다.
다만 ie에서는 작동하지 않는다.(그냥 div를 계속 쓰는게 좋을지도.)
header,nav,aside,section,article,footer
<div> vs <span> block 레벨 요소와 inline 요소의 차이를 알아야한다.
모든 html 요소는 디폴트 display 값을 가지며 이는 block 또는 inline 중에 결정된다.
(나머지는 css때 공부하는것으로 결정)






